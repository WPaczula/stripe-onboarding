{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","stripe","setStripe","useEffect","loadStripe","then","myForm","document","querySelector","addEventListener","handleForm","removeEventListener","event","a","preventDefault","createToken","business_type","company","name","value","tos_shown_and_accepted","accountResult","token","id","console","log","classNameName","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAqDeA,MAlDf,WAAgB,IAAD,EACeC,qBADf,mBACNC,EADM,KACEC,EADF,KAEbC,qBAAU,WACRC,YAAW,+GAA+GC,MAAK,SAAAJ,GAC7HC,EAAUD,QAEZ,IAGFE,qBAAU,WACR,IAAMG,EAASC,SAASC,cAAc,YAGtC,OAFAF,EAAOG,iBAAiB,SAAUC,GAE3B,kBAAMJ,EAAOK,oBAAoB,SAAUD,OAGpD,IAAMA,EAAU,uCAAG,WAAOE,GAAP,eAAAC,EAAA,6DACjBD,EAAME,iBADW,SAGWb,EAAOc,YAAY,UAAW,CACxDC,cAAe,UACfC,QAAS,CACPC,KAAMX,SAASC,cAAc,qBAAqBW,OAEpDC,wBAAwB,IART,OAGXC,EAHW,OAWfd,SAASC,cAAc,kBAAkBW,MAAQE,EAAcC,MAAMC,GACrEC,QAAQC,IAAIJ,EAAcC,MAAMC,IAZjB,2CAAH,sDAehB,OACE,qBAAKG,cAAc,MAAnB,SACE,uBAAMC,UAAU,UAAhB,UACE,kCACE,iDACA,uBAAOA,UAAU,wBAGnB,kCACE,iDACA,uBAAOT,KAAK,gBAAgBK,GAAG,qBAGjC,kDCnCOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,SAM1BX,M","file":"static/js/main.c7f59b03.chunk.js","sourcesContent":["import { loadStripe } from '@stripe/stripe-js'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [stripe, setStripe] = useState()\n  useEffect(() => {\n    loadStripe('pk_test_51IiNC5DRetoBK5HCNEhyXlT764GxxIKOauUBtorwn6hECdZ3RZCsMAs5iZkEh5HC5qDMgpoDAryhbWwXgRZxIYOd00kzfvkgLi').then(stripe => {\n      setStripe(stripe)\n    });\n  },[])\n  \n  \n  useEffect(() => {\n    const myForm = document.querySelector('.my-form');\n    myForm.addEventListener('submit', handleForm)\n\n    return () => myForm.removeEventListener('submit', handleForm)\n  })\n\n  const handleForm = async (event) => {\n    event.preventDefault();\n\n    const accountResult = await stripe.createToken('account', {\n      business_type: 'company',\n      company: {\n        name: document.querySelector('.inp-company-name').value,\n      },\n      tos_shown_and_accepted: true,\n    });\n\n      document.querySelector('#token-account').value = accountResult.token.id;\n      console.log(accountResult.token.id)\n  }\n\n  return (\n    <div classNameName=\"App\">\n      <form className=\"my-form\">\n        <label>\n          <span>Business Name</span>\n          <input className=\"inp-company-name\"/>\n        </label>\n        \n        <label>\n          <span>Token account</span>\n          <input name=\"token-account\" id=\"token-account\"/>\n        </label>\n\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}